{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { canonicalStringify } from \"../../cache/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nimport { getSuspenseCache } from \"../internal/index.js\";\nimport * as React from \"rehackt\";\nimport { __use } from \"./internal/__use.js\";\nimport { wrapHook } from \"./internal/index.js\";\nvar NULL_PLACEHOLDER = [];\nexport function useSuspenseFragment(options) {\n  return wrapHook(\"useSuspenseFragment\",\n  // eslint-disable-next-line react-compiler/react-compiler\n  useSuspenseFragment_, useApolloClient(typeof options === \"object\" ? options.client : undefined))(options);\n}\nfunction useSuspenseFragment_(options) {\n  var client = useApolloClient(options.client);\n  var from = options.from,\n    variables = options.variables;\n  var cache = client.cache;\n  var id = React.useMemo(function () {\n    return typeof from === \"string\" ? from : from === null ? null : cache.identify(from);\n  }, [cache, from]);\n  var fragmentRef = id === null ? null : getSuspenseCache(client).getFragmentRef([id, options.fragment, canonicalStringify(variables)], client, __assign(__assign({}, options), {\n    variables: variables,\n    from: id\n  }));\n  var _a = React.useState(fragmentRef === null ? NULL_PLACEHOLDER : [fragmentRef.key, fragmentRef.promise]),\n    current = _a[0],\n    setPromise = _a[1];\n  React.useEffect(function () {\n    if (fragmentRef === null) {\n      return;\n    }\n    var dispose = fragmentRef.retain();\n    var removeListener = fragmentRef.listen(function (promise) {\n      setPromise([fragmentRef.key, promise]);\n    });\n    return function () {\n      dispose();\n      removeListener();\n    };\n  }, [fragmentRef]);\n  if (fragmentRef === null) {\n    return {\n      data: null\n    };\n  }\n  if (current[0] !== fragmentRef.key) {\n    // eslint-disable-next-line react-compiler/react-compiler\n    current[0] = fragmentRef.key;\n    current[1] = fragmentRef.promise;\n  }\n  var data = __use(current[1]);\n  return {\n    data: data\n  };\n}\n//# sourceMappingURL=useSuspenseFragment.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}